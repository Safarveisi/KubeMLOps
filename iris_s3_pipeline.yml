# PIPELINE DEFINITION
# Name: iris
# Description: ETL pipeline
# Inputs:
#    persist_s3: bool
components:
  comp-condition-1:
    dag:
      tasks:
        for-loop-3:
          componentRef:
            name: comp-for-loop-3
          inputs:
            artifacts:
              pipelinechannel--download-csv_file:
                componentInputArtifact: pipelinechannel--download-csv_file
            parameters:
              pipelinechannel--persist_s3:
                componentInputParameter: pipelinechannel--persist_s3
          iteratorPolicy:
            parallelismLimit: 3
          parameterIterator:
            itemInput: pipelinechannel--loop-item-param-2
            items:
              raw: '["ml_platform/iris_0.csv", "ml_platform/iris_1.csv", "ml_platform/iris_2.csv",
                "ml_platform/iris_3.csv", "ml_platform/iris_4.csv"]'
          taskInfo:
            name: for-loop-3
    inputDefinitions:
      artifacts:
        pipelinechannel--download-csv_file:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        pipelinechannel--persist_s3:
          parameterType: BOOLEAN
  comp-download:
    executorLabel: exec-download
    outputDefinitions:
      artifacts:
        csv_file:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-for-loop-3:
    dag:
      tasks:
        persist:
          cachingOptions: {}
          componentRef:
            name: comp-persist
          inputs:
            artifacts:
              csv_file:
                componentInputArtifact: pipelinechannel--download-csv_file
            parameters:
              key:
                componentInputParameter: pipelinechannel--loop-item-param-2
          taskInfo:
            name: persist
    inputDefinitions:
      artifacts:
        pipelinechannel--download-csv_file:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        pipelinechannel--loop-item-param-2:
          parameterType: STRING
        pipelinechannel--persist_s3:
          parameterType: BOOLEAN
  comp-persist:
    executorLabel: exec-persist
    inputDefinitions:
      artifacts:
        csv_file:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        key:
          parameterType: STRING
  comp-xgboost-train:
    executorLabel: exec-xgboost-train
    inputDefinitions:
      artifacts:
        training_data:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        booster:
          defaultValue: gbtree
          isOptional: true
          parameterType: STRING
        label_column:
          defaultValue: 4.0
          isOptional: true
          parameterType: NUMBER_INTEGER
        learning_rate:
          defaultValue: 0.3
          isOptional: true
          parameterType: NUMBER_DOUBLE
        max_depth:
          defaultValue: 6.0
          isOptional: true
          parameterType: NUMBER_INTEGER
        min_split_loss:
          defaultValue: 0.0
          isOptional: true
          parameterType: NUMBER_DOUBLE
        num_class:
          defaultValue: 3.0
          isOptional: true
          parameterType: NUMBER_INTEGER
        num_iterations:
          defaultValue: 10.0
          isOptional: true
          parameterType: NUMBER_INTEGER
        objective:
          defaultValue: multi:softmax
          isOptional: true
          parameterType: STRING
    outputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
        model_config:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-download:
      container:
        args:
        - --output_path
        - '{{$.outputs.artifacts[''csv_file''].path}}'
        command:
        - python
        - comp.py
        env:
        - name: ENV
          value: anything
        image: ciaa/download:v4.0.0
    exec-persist:
      container:
        args:
        - --input_path
        - '{{$.inputs.artifacts[''csv_file''].path}}'
        - --key
        - '{{$.inputs.parameters[''key'']}}'
        command:
        - python
        - comp.py
        image: ciaa/persist:v1.0.0
    exec-xgboost-train:
      container:
        args:
        - --training-data
        - '{{$.inputs.artifacts[''training_data''].path}}'
        - --label-column
        - '{{$.inputs.parameters[''label_column'']}}'
        - --num-class
        - '{{$.inputs.parameters[''num_class'']}}'
        - --num-iterations
        - '{{$.inputs.parameters[''num_iterations'']}}'
        - --objective
        - '{{$.inputs.parameters[''objective'']}}'
        - --booster
        - '{{$.inputs.parameters[''booster'']}}'
        - --learning-rate
        - '{{$.inputs.parameters[''learning_rate'']}}'
        - --min-split-loss
        - '{{$.inputs.parameters[''min_split_loss'']}}'
        - --max-depth
        - '{{$.inputs.parameters[''max_depth'']}}'
        - --model
        - '{{$.outputs.artifacts[''model''].path}}'
        - --model-config
        - '{{$.outputs.artifacts[''model_config''].path}}'
        command:
        - python
        - comp.py
        image: ciaa/train:v2.0.0
        resources:
          memoryLimit: 1.073741824
          resourceMemoryLimit: 1Gi
pipelineInfo:
  description: ETL pipeline
  name: iris
root:
  dag:
    tasks:
      condition-1:
        componentRef:
          name: comp-condition-1
        dependentTasks:
        - download
        inputs:
          artifacts:
            pipelinechannel--download-csv_file:
              taskOutputArtifact:
                outputArtifactKey: csv_file
                producerTask: download
          parameters:
            pipelinechannel--persist_s3:
              componentInputParameter: persist_s3
        taskInfo:
          name: condition-1
        triggerPolicy:
          condition: inputs.parameter_values['pipelinechannel--persist_s3'] == true
      download:
        cachingOptions: {}
        componentRef:
          name: comp-download
        taskInfo:
          name: download
      xgboost-train:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-xgboost-train
        dependentTasks:
        - download
        inputs:
          artifacts:
            training_data:
              taskOutputArtifact:
                outputArtifactKey: csv_file
                producerTask: download
          parameters:
            label_column:
              runtimeValue:
                constant: 4.0
            num_iterations:
              runtimeValue:
                constant: 200.0
            objective:
              runtimeValue:
                constant: multi:softmax
        taskInfo:
          name: xgboost-train
  inputDefinitions:
    parameters:
      persist_s3:
        parameterType: BOOLEAN
schemaVersion: 2.1.0
sdkVersion: kfp-2.11.0
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-persist:
          secretAsEnv:
          - keyToEnv:
            - envVar: bucket
              secretKey: S3_BUCKET
            secretName: s3-credentials
          - keyToEnv:
            - envVar: access_key
              secretKey: AWS_ACCESS_KEY_ID
            secretName: s3-credentials
          - keyToEnv:
            - envVar: secret_key
              secretKey: AWS_SECRET_ACCESS_KEY
            secretName: s3-credentials
          - keyToEnv:
            - envVar: endpoint_url
              secretKey: S3_ENDPOINT_URL
            secretName: s3-credentials
